import unittestclass mergeSort:    def sort(self, arr):        return self.merge_sort(arr)    def merge_sort(self, arr):        if len(arr) < 2:            return arr        mid = int(len(arr) / 2)        x = self.merge_sort(arr[:mid])        y = self.merge_sort(arr[mid:])        z = self.merge(x, y)        return z    def merge(self, y, z):        self.isSorted(z)        self.isSorted(y)        result = list()        while (len(y) > 0) and (len(z) > 0):            if y[0] < z[0]:                result.append(y[0])                y.pop(0)            else:                result.append(z[0])                z.pop(0)        result += y        result += z        return result    def isSorted(self, arr):        try:            for i in range(len(arr)-1):                assert (arr[i] <= arr[i+1])        except AssertionError, e:            print arr            print str(e)            raise RuntimeError("damar")if __name__ == '__main__':    ms = mergeSort()    print ms.sort([3, 6, 5, 1, 4, 2])